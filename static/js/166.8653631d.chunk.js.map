{"version":3,"file":"static/js/166.8653631d.chunk.js","mappings":"0SAMMA,GAAQ,eACXC,EAAAA,GAAe,SADJ,SAEXC,EAAAA,GAAe,SAFJ,SAGXC,EAAAA,GAAe,SAHJ,SAIXC,EAAAA,GAAe,SAJJ,SAKXC,EAAAA,GAAe,QALJ,GAiBd,EATqB,WAAiB,IAAhBC,EAAe,uDAAP,GAC5B,OAAOC,IAAID,GAAO,SAAAE,GAChB,MAAO,CACLC,KAAMT,EAASQ,GACfA,QAAAA,EAEH,GACF,E,oBCTOE,EAAWC,EAAAA,EAAAA,OAEbC,EAAS,CAACX,EAAAA,GAAcC,EAAAA,GAAcC,EAAAA,IACtCU,EAAQ,CAACT,EAAAA,GAAcC,EAAAA,IAsD7B,EApDuB,SAAAS,GACrB,IAAMC,EAAaC,EAAaJ,GAC1BK,EAAYD,EAAaH,GAC/B,GAAwBK,EAAAA,EAAAA,UAASL,EAAM,IAAvC,eAAOM,EAAP,KAAaC,EAAb,KACA,GAA0BF,EAAAA,EAAAA,UAASN,EAAO,IAA1C,eAAOS,EAAP,KAAcC,EAAd,KAEAC,QAAQC,IAAI,QAASL,EAAME,GAiC3B,MAAO,CACLP,aAAAA,EACAW,WAHgB,EAIhBN,KAAAA,EACAE,MAAAA,EAEAK,cAhCA,SAAC,IAAD,CAAQC,MAAOR,EAAMS,SAAUR,EAASS,KAAK,QAA7C,UACGtB,EAAAA,EAAAA,KAAIU,GAAW,SAAAa,GACd,IAAQrB,EAAkBqB,EAAlBrB,KAAMD,EAAYsB,EAAZtB,QACd,OACE,SAACE,EAAD,CAAsBiB,MAAOnB,EAA7B,SACGC,GADUD,EAIhB,MAyBHuB,eApBA,SAAC,IAAD,CAAQJ,MAAON,EAAOO,SAAUN,EAAUO,KAAK,QAA/C,UACGtB,EAAAA,EAAAA,KAAIQ,GAAY,SAAAe,GACf,IAAQrB,EAAkBqB,EAAlBrB,KAAMD,EAAYsB,EAAZtB,QACd,OACE,SAACE,EAAD,CAAsBiB,MAAOnB,EAA7B,SACGC,GADUD,EAIhB,MAcHwB,MAzCY,WACZV,EAASV,EAAO,IAChBQ,EAAQP,EAAM,GACf,EAwCF,E,UCZD,EA3CY,WACV,MAA0DoB,EAAeC,EAAAA,GAAjER,EAAR,EAAQA,aAAcK,EAAtB,EAAsBA,cAAeN,EAArC,EAAqCA,UAAWO,EAAhD,EAAgDA,MAChD,OACE,SAAC,IAAD,WACE,SAAC,IAAD,CAAKG,KAAM,GAAIC,KAAM,EAArB,UACE,SAAC,IAAD,CACEC,MAAM,qBACNC,OACE,SAAC,IAAD,CAAQC,QAAM,EAACV,KAAK,QAAQW,QAASR,EAArC,mBAHJ,UAQE,UAAC,IAAD,CAAKS,OAAQ,CAAC,GAAI,IAAlB,WACE,UAAC,IAAD,CAAKN,KAAM,GAAX,WACE,SAAC,IAAD,CAAcO,OAAQ,EAAtB,UACE,SAAC,SAAD,CAAmBC,MAAM,QAAzB,SAAkCT,EAAAA,OAEpC,UAAC,IAAD,YACE,SAAC,SAAD,CAAmBS,MAAM,OAAzB,SAAiCjB,KACjC,SAAC,SAAD,CAAmBiB,MAAM,QAAzB,SAAkCZ,KAClC,SAAC,SAAD,CAAmBY,MAAM,UAAzB,UACE,SAAC,IAAD,CAAKC,MAAOnB,EAAY,UAAY,OAApC,SAA6CA,EAAUoB,sBAI7D,SAAC,IAAD,CAAKV,KAAM,GAAX,UACE,SAAC,IAAD,CAAQW,OAAK,EAAC3B,KAAK,UAAnB,mBAIF,SAAC,IAAD,CAAKgB,KAAM,GAAX,UACE,SAAC,IAAD,CAAQW,OAAK,EAAC3B,KAAK,UAAUoB,QAAM,EAAnC,UACE,SAAC,KAAD,CAAMQ,GAAG,IAAT,gCAQf,C","sources":["hooks/useNameHooks.js","hooks/useRiskOnVault.js","pages/Add/index.jsx"],"sourcesContent":["// === Utils === //\nimport map from 'lodash/map'\n\n// === Constants === //\nimport { LUSD_ADDRESS, USDC_ADDRESS, SUSD_ADDRESS, WETH_ADDRESS, GUSD_ADDRESS } from '@/constants/tokens'\n\nconst NAME_MAP = {\n  [LUSD_ADDRESS]: 'LUSD',\n  [USDC_ADDRESS]: 'USDC',\n  [SUSD_ADDRESS]: 'SUSD',\n  [WETH_ADDRESS]: 'WETH',\n  [GUSD_ADDRESS]: 'GUSD'\n}\n\nconst useNameHooks = (array = []) => {\n  return map(array, address => {\n    return {\n      name: NAME_MAP[address],\n      address\n    }\n  })\n}\n\nexport default useNameHooks\n","import React, { useState } from 'react'\n\n// === Components === //\nimport { Select } from 'antd'\n\n// === Hooks === //\nimport useNameHooks from '@/hooks/useNameHooks'\n\n// === Constants === //\nimport { LUSD_ADDRESS, USDC_ADDRESS, SUSD_ADDRESS, WETH_ADDRESS, GUSD_ADDRESS } from '@/constants/tokens'\nimport { map } from 'lodash'\n\nconst { Option } = Select\n\nconst tokens = [LUSD_ADDRESS, USDC_ADDRESS, SUSD_ADDRESS]\nconst types = [WETH_ADDRESS, GUSD_ADDRESS]\n\nconst useRiskOnVault = vaultAddress => {\n  const tokenArray = useNameHooks(tokens)\n  const typeArray = useNameHooks(types)\n  const [type, setType] = useState(types[0])\n  const [token, setToken] = useState(tokens[0])\n\n  console.log('type=', type, token)\n  const reset = () => {\n    setToken(tokens[0])\n    setType(types[0])\n  }\n\n  const typeSelector = (\n    <Select value={type} onChange={setType} size=\"small\">\n      {map(typeArray, item => {\n        const { name, address } = item\n        return (\n          <Option key={address} value={address}>\n            {name}\n          </Option>\n        )\n      })}\n    </Select>\n  )\n\n  const tokenSelector = (\n    <Select value={token} onChange={setToken} size=\"small\">\n      {map(tokenArray, item => {\n        const { name, address } = item\n        return (\n          <Option key={address} value={address}>\n            {name}\n          </Option>\n        )\n      })}\n    </Select>\n  )\n\n  const isSupport = true\n  return {\n    vaultAddress,\n    isSupport,\n    type,\n    token,\n    // elements\n    typeSelector,\n    tokenSelector,\n    // functions\n    reset\n  }\n}\n\nexport default useRiskOnVault\n","import React from 'react'\n\n// === Components === //\nimport { Link } from 'react-router-dom'\nimport { Button, Row, Col, Card, Descriptions, Tag } from 'antd'\n\n// === Hooks === //\nimport useRiskOnVault from '@/hooks/useRiskOnVault'\n\n// === Constants === //\nimport { VAULT_ADDRESS } from '@/constants'\n\nconst Add = () => {\n  const { typeSelector, tokenSelector, isSupport, reset } = useRiskOnVault(VAULT_ADDRESS)\n  return (\n    <Row>\n      <Col span={12} push={6}>\n        <Card\n          title=\"Add Personal Vault\"\n          extra={\n            <Button danger size=\"small\" onClick={reset}>\n              Reset\n            </Button>\n          }\n        >\n          <Row gutter={[12, 12]}>\n            <Col span={24}>\n              <Descriptions column={1}>\n                <Descriptions.Item label=\"Vault\">{VAULT_ADDRESS}</Descriptions.Item>\n              </Descriptions>\n              <Descriptions>\n                <Descriptions.Item label=\"Type\">{typeSelector}</Descriptions.Item>\n                <Descriptions.Item label=\"Token\">{tokenSelector}</Descriptions.Item>\n                <Descriptions.Item label=\"Support\">\n                  <Tag color={isSupport ? '#87d068' : '#f50'}>{isSupport.toString()}</Tag>\n                </Descriptions.Item>\n              </Descriptions>\n            </Col>\n            <Col span={24}>\n              <Button block type=\"primary\">\n                Ok\n              </Button>\n            </Col>\n            <Col span={24}>\n              <Button block type=\"primary\" danger>\n                <Link to=\"/\">Cancel</Link>\n              </Button>\n            </Col>\n          </Row>\n        </Card>\n      </Col>\n    </Row>\n  )\n}\n\nexport default Add\n"],"names":["NAME_MAP","LUSD_ADDRESS","USDC_ADDRESS","SUSD_ADDRESS","WETH_ADDRESS","GUSD_ADDRESS","array","map","address","name","Option","Select","tokens","types","vaultAddress","tokenArray","useNameHooks","typeArray","useState","type","setType","token","setToken","console","log","isSupport","typeSelector","value","onChange","size","item","tokenSelector","reset","useRiskOnVault","VAULT_ADDRESS","span","push","title","extra","danger","onClick","gutter","column","label","color","toString","block","to"],"sourceRoot":""}